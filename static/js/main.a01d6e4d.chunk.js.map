{"version":3,"sources":["routes/endpoints.ts","images/error-icon.svg","components/atoms/ErrorIcon/index.tsx","images/logo.svg","components/atoms/Logo/index.tsx","components/atoms/Button/index.tsx","components/atoms/Typography/index.tsx","images/refresh-captcha-icon.svg","contexts/index.ts","hooks/index.js","components/organisms/LogInForm/index.tsx","components/templates/AuthorizationTemplate/index.tsx","components/pages/LoginPage/index.tsx","components/templates/ChatTemplate/index.tsx","images/male-user-icon.svg","images/female-user-icon.svg","components/atoms/UserAvatar/index.tsx","images/back-arrow-icon.svg","components/molecules/ChatBodyHeader/index.tsx","images/attached-file-icon-1.svg","images/attached-file-icon-2.svg","utils/formatFileSize.ts","components/molecules/Message/index.tsx","images/send-icon.svg","images/attach-icon.svg","store/chats.ts","utils/validateFile.ts","components/molecules/ChatBodySendMenu/index.tsx","components/organisms/ChatBody/index.tsx","images/profile-icon.svg","components/molecules/ChatHeader/index.tsx","utils/shortenMessage.ts","components/molecules/ContactInfo/index.tsx","components/organisms/Contacts/index.tsx","images/alone-user.svg","components/molecules/NoUsersMessage/index.tsx","images/loading-icon.svg","components/atoms/LoadingIcon/index.tsx","components/pages/ChatPage/index.tsx","images/dropdown-arrow.svg","components/organisms/SignInForm/index.tsx","utils/capitalize.ts","components/pages/SignInPage/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["SCREENS","ErrorIcon","className","src","errorIcon","alt","Logo","type","logo","Button","children","direction","history","useHistory","classes","cn","button","onClick","push","Header1","Header2","Header3","Header4","Text1","Text2","initialAuth","user","username","logIn","isAuth","authContext","createContext","useAuth","useContext","LogInForm","useState","Date","now","dateNow","setDateNow","auth","useForm","register","errors","formState","handleSubmit","loginInputclasses","invalid","login","passwordInputclasses","password","captchaInputclasses","captcha","onSubmit","data","a","formData","FormData","append","axios","post","response","status","isAxiosError","alert","action","required","placeholder","refreshCaptchaIcon","AuthorizationTemplate","left","LoginPage","ChatTemplate","header","contactsBar","chatBody","isActive","headerClassnames","chosen","contactsClassnames","mainClassnames","UserAvatar","gender","maleIcon","femaleIcon","ChatBodyHeader","lastSeen","contactName","backArrow","formatFileSize","size","toFixed","Message","attached","text","source","title","link","attachedIcon1","attachedIcon2","href","target","rel","lastSeenColl","chats","makeAutoObservable","this","userList","forEach","id","uniqueId","sample","messages","message","chat","fileExtensions","ChatBodySendMenu","observer","socket","name","inputValue","setInputValue","uploadStatus","setUploadStatus","undefined","file","setFile","setLink","handleUpload","event","files","includes","preventDefault","isAttached","send","JSON","stringify","fileSize","fileName","fileLink","recieverId","recieverName","addMessage","attachIcon","onChange","ref","inputElement","focus","value","sendIcon","ChatBody","currentChatId","activeChat","filter","messageList","map","ChatHeader","ProfileIcon","shortenMessage","result","length","slice","ContactInfo","lastMessage","active","Contacts","contactItems","NoUsersMessage","description","aloneUser","LoadingIcon","loadingIcon","websocket","WebSocket","localStorage","getItem","ChatPage","isOpened","setIsOpened","useParams","useEffect","onopen","onclose","onerror","error","console","log","readyState","onmessage","msg","list","parse","addChats","SignInForm","isDropped","setIsDropped","genderList","setGenderList","selectValue","setSelectValue","selectText","setSelectText","get","then","genders","string","confirmInputclasses","password_confirm","nameInputclasses","selectPlaceholderClasses","firstOptionClasses","dropped","secondOptionClasses","handleDropdown","getAttribute","currentGender","item","method","url","maxLength","toUpperCase","dropdownArrow","SignInPage","AuthProvider","currentUser","initialState","setUser","authValue","userData","setItem","isEmpty","Provider","PrivateRoute","props","render","to","SCREEN_LOGIN","Routes","path","exact","SCREEN_SIGN","SCREEN_EMPTY_CHAT","SCREEN_CHAT","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a01d6e4d.chunk.js","sourcesContent":["export enum SCREENS {\n  SCREEN_LOGIN = '/login',\n  SCREEN_CHAT = '/chat/:id',\n  SCREEN_SIGN = '/sign_in',\n  SCREEN_EMPTY_CHAT = '/chat',\n}\n","export default __webpack_public_path__ + \"static/media/error-icon.dd5c433f.svg\";","import React from 'react';\nimport errorIcon from '../../../images/error-icon.svg';\nimport './style.scss';\n\nexport const ErrorIcon: React.FC = () => {\n  return <img className=\"error-icon\" src={errorIcon} alt=\"error icon\" />;\n};\n","export default __webpack_public_path__ + \"static/media/logo.8144ace5.svg\";","import React from 'react';\nimport logo from '../../../images/logo.svg';\nimport './style.scss';\n\ninterface LogoProps {\n  type: 'login-logo' | 'chat-logo';\n}\n\nexport const Logo: React.FC<LogoProps> = ({ type }) => {\n  return <img className={type} src={logo} alt=\"logo\" />;\n};\n","import React from 'react';\nimport './style.scss';\nimport { useHistory } from 'react-router';\nimport cn from 'classnames';\n\ninterface ButtonProps {\n  type: 'button' | 'submit' | 'reset';\n  direction?: 'login' | 'registration';\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  type,\n  children,\n  direction,\n}) => {\n  const history = useHistory();\n\n  const handleClick = () => {\n    if (direction === 'login') {\n      history.push('/login');\n    }\n\n    if (direction === 'registration') {\n      history.push('./sign_in');\n    }\n  };\n\n  const classes = cn({\n    'submit-button': type === 'submit',\n    button: type === 'button',\n  });\n\n  return (\n    <button className={classes} type={type} onClick={handleClick}>\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\nimport './style.scss';\n\ntype TypographyProps =\n  | React.HTMLAttributes<HTMLHeadingElement>\n  | React.HTMLAttributes<HTMLParagraphElement>;\n\nexport const Header1: React.FC<TypographyProps> = ({ children }) => {\n  return <h1 className=\"header1 typography\">{children}</h1>;\n};\n\nexport const Header2: React.FC<TypographyProps> = ({ children }) => {\n  return <h2 className=\"header2 typography\">{children}</h2>;\n};\n\nexport const Header3: React.FC<TypographyProps> = ({ children }) => {\n  return <h3 className=\"header3 typography\">{children}</h3>;\n};\n\nexport const Header4: React.FC<TypographyProps> = ({ children }) => {\n  return <h4 className=\"header4 typography\">{children}</h4>;\n};\n\nexport const Text1: React.FC<TypographyProps> = ({ children }) => {\n  return <p className=\"text1 typography\">{children}</p>;\n};\n\nexport const Text2: React.FC<TypographyProps> = ({ children }) => {\n  return <p className=\"text2 typography\">{children}</p>;\n};\n","export default __webpack_public_path__ + \"static/media/refresh-captcha-icon.4a978d34.svg\";","import { createContext } from 'react';\n\ninterface User {\n  username: string;\n}\n\ninterface Auth {\n  user: User | null;\n  logIn: (userData: string) => void;\n  isAuth: () => boolean;\n}\n\nconst initialAuth: Auth = {\n  user: { username: '' },\n  logIn: () => {},\n  isAuth: () => false,\n};\n\nexport const authContext = createContext(initialAuth);\n","import { useContext } from 'react';\n\nimport { authContext } from '../contexts';\n\nexport const useAuth = () => useContext(authContext);\n","import React from 'react';\nimport './style.scss';\nimport { ErrorIcon } from '../../atoms/ErrorIcon';\nimport { Logo } from '../../atoms/Logo';\nimport { Button } from '../../atoms/Button';\nimport { Header1, Header2 } from '../../atoms/Typography';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport refreshCaptchaIcon from '../../../images/refresh-captcha-icon.svg';\nimport axios from 'axios';\n\nimport { useAuth } from '../../../hooks';\n\ninterface LogInInputs {\n  login: string;\n  password: string;\n  captcha: string;\n}\n\nexport const LogInForm: React.FC = () => {\n  const [dateNow, setDateNow] = useState<number>(Date.now);\n  const auth = useAuth();\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm<LogInInputs>();\n\n  const loginInputclasses = cn('input', {\n    invalid: errors.login,\n  });\n\n  const passwordInputclasses = cn('input', {\n    invalid: errors.password,\n  });\n\n  const captchaInputclasses = cn('captcha-input', {\n    invalid: errors.captcha,\n  });\n\n  const history = useHistory();\n  const onSubmit: SubmitHandler<LogInInputs> = async (data) => {\n    const formData = new FormData();\n    formData.append('login', data.login);\n    formData.append('password', data.password);\n    formData.append('captcha', data.captcha);\n    try {\n      const response = await axios.post<string>(\n        'http://109.194.37.212:93/api/auth/login',\n        formData\n      );\n\n      if (response.status !== 400) {\n        const data = response.data;\n        auth.logIn(data);\n        if (auth.isAuth()) {\n          history.push('./chat');\n        }\n      }\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        alert(error.response?.data);\n      }\n    }\n  };\n\n  const src = `http://109.194.37.212:93/api/auth/captcha?t=${dateNow}`;\n  const handleCaptchaRefresh = () => {\n    setDateNow(Date.now());\n  };\n\n  return (\n    <div className=\"login-form-container\">\n      <Logo type=\"login-logo\" />\n      <Header1>\n        Welcome to <span className=\"header-blue\">Chatty</span>\n        <span className=\"header-grey\">!</span>\n      </Header1>\n      <Header2>Please, authorize yourself</Header2>\n      <form action=\"post\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-field\">\n          <label>\n            <span className=\"form-field__label\">User name</span>\n            <div className=\"form-field__input\">\n              <input\n                {...register('login', { required: true })}\n                className={loginInputclasses}\n                placeholder=\"Input user name\"\n              />\n              {errors.login ? <ErrorIcon /> : null}\n            </div>\n          </label>\n          <span className=\"form-field__error\">\n            {errors.login && 'Login is required'}\n          </span>\n        </div>\n\n        <div className=\"form-field\">\n          <label>\n            <span className=\"form-field__label\">Password</span>\n            <div className=\"form-field__input\">\n              <input\n                {...register('password', { required: true })}\n                className={passwordInputclasses}\n                placeholder=\"Input password\"\n                type=\"password\"\n              />\n              {errors.password ? <ErrorIcon /> : null}\n            </div>\n          </label>\n          <span className=\"form-field__error\">\n            {errors.password && 'Password is required'}\n          </span>\n        </div>\n\n        <div className=\"form-field\">\n          <div className=\"form-field__captcha\">\n            <div className=\"input-container\">\n              <label>\n                <span className=\"form-field__label\">Security code</span>\n                <div className=\"form-field__input\">\n                  <input\n                    {...register('captcha', { required: true })}\n                    className={captchaInputclasses}\n                    placeholder=\"Security code\"\n                  />\n                  {errors.captcha ? <ErrorIcon /> : null}\n                </div>\n              </label>\n              <span className=\"form-field__error\">\n                {errors.captcha && 'Captcha is wrong'}\n              </span>\n            </div>\n            <div className=\"captcha-container\">\n              <img src={src} alt=\"captcha\" />\n            </div>\n            <img\n              className=\"refresh-icon\"\n              src={refreshCaptchaIcon}\n              alt=\"refresh captcha icon\"\n              onClick={handleCaptchaRefresh}\n            />\n          </div>\n        </div>\n\n        <Button type=\"submit\">Log in</Button>\n        <Button type=\"button\" direction=\"registration\">\n          Registration\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport './style.scss';\n\ntype AuthorizationTemplateProps = {\n  left: React.ReactNode | React.ReactNode[];\n};\n\nexport const AuthorizationTemplate: React.FC<AuthorizationTemplateProps> = ({\n  left,\n}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"authorization-page-template\">\n        <div className=\"authorization-page-template__left\">{left}</div>\n        <div className=\"authorization-page-template__right\"></div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './style.scss';\nimport { LogInForm } from '../../organisms/LogInForm';\nimport { AuthorizationTemplate } from '../../templates/AuthorizationTemplate';\n\nexport const LoginPage: React.FC = () => {\n  return <AuthorizationTemplate left={<LogInForm />} />;\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport './style.scss';\n\ntype ChatTemplateProps = {\n  header?: React.ReactNode | React.ReactNode[];\n  contactsBar?: React.ReactNode | React.ReactNode[];\n  chatBody?: React.ReactNode | React.ReactNode[];\n  isActive: string;\n};\n\nexport const ChatTemplate: React.FC<ChatTemplateProps> = ({\n  header,\n  contactsBar,\n  chatBody,\n  isActive,\n}) => {\n  const headerClassnames = cn('header-wrapper', {\n    chosen: isActive,\n  });\n\n  const contactsClassnames = cn('contacts-wrapper', {\n    chosen: isActive,\n  });\n\n  const mainClassnames = cn('main-wrapper', {\n    chosen: isActive,\n  });\n\n  return (\n    <div className=\"chat-template\">\n      <div className={headerClassnames}>\n        <div className=\"header\">{header}</div>\n      </div>\n      <div className=\"content-wrapper\">\n        <div className={contactsClassnames}>\n          <div className=\"contacts-bar\">{contactsBar}</div>\n        </div>\n        <div className={mainClassnames}>\n          <div className=\"main\">{chatBody}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/male-user-icon.884cf237.svg\";","export default __webpack_public_path__ + \"static/media/female-user-icon.9fe512a0.svg\";","import React from 'react';\nimport maleIcon from './../../../images/male-user-icon.svg';\nimport femaleIcon from './../../../images/female-user-icon.svg';\nimport './style.scss';\n\ninterface UserAvatarProps {\n  gender: string;\n}\n\nexport const UserAvatar: React.FC<UserAvatarProps> = ({ gender }) => {\n  switch (gender) {\n    case 'male':\n      return <img src={maleIcon} className=\"user-avatar\" alt=\"male\" />;\n    case 'female':\n      return <img src={femaleIcon} className=\"user-avatar\" alt=\"female\" />;\n    default:\n      return null;\n  }\n};\n","export default __webpack_public_path__ + \"static/media/back-arrow-icon.139af588.svg\";","import React from 'react';\nimport './style.scss';\nimport { Header3, Text1 } from '../../atoms/Typography';\nimport { UserAvatar } from '../../atoms/UserAvatar';\nimport backArrow from '../../../images/back-arrow-icon.svg';\nexport interface ContactHeaderProps {\n  lastSeen?: string;\n  contactName: string;\n  onClick: React.MouseEventHandler<HTMLImageElement>;\n  gender: string;\n}\n\nexport const ChatBodyHeader: React.FC<ContactHeaderProps> = ({\n  lastSeen,\n  contactName,\n  onClick,\n  gender,\n}) => {\n  return (\n    <div className=\"contact-header\">\n      <img\n        className=\"back-arrow\"\n        src={backArrow}\n        alt=\"back arrow icon\"\n        onClick={onClick}\n      />\n      <UserAvatar gender={gender} />\n      <div className=\"info-wrapper\">\n        <Header3>{contactName}</Header3>\n        <Text1>Last seen {lastSeen} minutes ago</Text1>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/attached-file-icon-1.cf687aac.svg\";","export default __webpack_public_path__ + \"static/media/attached-file-icon-2.e8f700d0.svg\";","export const formatFileSize = (size: number | undefined) => {\n  if (size) {\n    let result;\n\n    if (size > 1048576) {\n      result = `${(size / 1048576).toFixed(1)} MB`;\n    } else {\n      result = `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    return result;\n  }\n\n  return;\n};\n","import React from 'react';\nimport './style.scss';\nimport { Text1, Text2 } from '../../atoms/Typography';\nimport cn from 'classnames';\nimport attachedIcon1 from '../../../images/attached-file-icon-1.svg';\nimport attachedIcon2 from '../../../images/attached-file-icon-2.svg';\nimport { Messages } from '../../../store/chats';\nimport { formatFileSize } from '../../../utils/formatFileSize';\n\nexport const Message: React.FC<Messages> = ({\n  attached,\n  text,\n  source,\n  title,\n  size,\n  link,\n}) => {\n  const classes = cn(source, 'message');\n\n  return (\n    <div className={classes}>\n      {attached ? (\n        <div className=\"file-container\">\n          <div className=\"icon-container\">\n            <img\n              className=\"attach-icon-1\"\n              src={attachedIcon1}\n              alt=\"attached file icon\"\n            />\n            <img\n              className=\"attach-icon-2\"\n              src={attachedIcon2}\n              alt=\"attached file icon\"\n            />\n          </div>\n          <div className=\"file-info-container\">\n            <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <Text1>{title}</Text1>\n            </a>\n            <Text2>{formatFileSize(size)}</Text2>\n          </div>\n        </div>\n      ) : null}\n      {text ? <Text1>{text}</Text1> : null}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/send-icon.e8e9d77f.svg\";","export default __webpack_public_path__ + \"static/media/attach-icon.ff8ff9bf.svg\";","import { makeAutoObservable } from 'mobx';\nimport { uniqueId, sample } from 'lodash';\n\nexport interface UserInfo {\n  id?: string;\n  name: string;\n  gender: string;\n  lastSeen?: string;\n  messages: Messages[];\n}\n\nexport interface Messages {\n  id: string;\n  attached: boolean;\n  source: string;\n  text?: string;\n  title?: string;\n  size?: number;\n  link?: string;\n}\n\nconst lastSeenColl = ['10', '9', '8', '7', '6', '5', '4', '3', '2'];\n\nclass Chats {\n  chats: UserInfo[] = [];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  addChats(userList: UserInfo[]) {\n    const response: UserInfo[] = [...userList];\n    response.forEach((user) => {\n      user.id = uniqueId();\n      user.lastSeen = sample(lastSeenColl);\n      user.messages = [];\n    });\n    this.chats = [...response];\n  }\n\n  addMessage(id: string | undefined, message: Messages) {\n    this.chats.forEach((chat) => {\n      if (chat.id === id) {\n        chat.messages?.push(message);\n      }\n    });\n  }\n}\n\nexport default new Chats();\n","const fileExtensions = [\n  'video/mp4',\n  'video/ogg',\n  'video/webm',\n  'audio/mpeg',\n  'audio/ogg',\n  'image/jpeg',\n  'image/jpg',\n  'image/gif, image/png',\n  'image/svg+xml',\n];\n\nexport const validateFile = (type: string, size: number) => {\n  if (!fileExtensions.includes(type)) {\n    alert(\n      'This file extension is not supported!\\nSupported extensions are: mp4, ogg, webm, mpeg, jpeg, jpg, gif, png, svg+xml.'\n    );\n    return false;\n  }\n\n  if (size / 1048576 >= 2) {\n    alert('This file exceeds size limit! Try file that weighs less than 2 mb.');\n    return false;\n  }\n\n  return true;\n};\n","import React from 'react';\nimport './style.scss';\nimport { useState } from 'react';\nimport sendIcon from '../../../images/send-icon.svg';\nimport attachIcon from '../../../images/attach-icon.svg';\nimport { Messages } from '../../../store/chats';\nimport chats from '../../../store/chats';\nimport { observer } from 'mobx-react-lite';\nimport { uniqueId } from 'lodash';\nimport { validateFile } from '../../../utils/validateFile';\nimport axios from 'axios';\n\ninterface ChatBodySendMenuProps {\n  socket: WebSocket;\n  id?: string;\n  name: string;\n}\n\nexport const ChatBodySendMenu: React.FC<ChatBodySendMenuProps> = observer(\n  ({ id, socket, name }) => {\n    const [inputValue, setInputValue] = useState<string>('');\n    const [uploadStatus, setUploadStatus] = useState<string>('no-upload');\n    const [file, setFile] = useState<File | undefined>(undefined);\n    const [link, setLink] = useState<string>('');\n\n    const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setInputValue(event.target.value);\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const isAttached = file === undefined ? false : true;\n\n      if (uploadStatus === 'uploading') {\n        alert('File is uploading!');\n      }\n\n      if (isAttached) {\n        const message: Messages = {\n          attached: isAttached,\n          id: uniqueId(),\n          source: 'outcoming',\n          text: inputValue,\n          size: file?.size,\n          title: file?.name,\n          link: `http://109.194.37.212:93${link}`,\n        };\n        if (message.size === undefined) {\n          return;\n        }\n        socket.send(\n          `'${JSON.stringify({\n            type: 'message',\n            data: {\n              message: inputValue,\n              fileSize: file?.size,\n              fileName: file?.name,\n              fileLink: `http://109.194.37.212:93${link}`,\n              recieverId: id,\n              recieverName: name,\n            },\n          })}'`\n        );\n        chats.addMessage(id, message);\n        setFile(undefined);\n        setInputValue('');\n        setUploadStatus('no-upload');\n      } else {\n        const message: Messages = {\n          attached: isAttached,\n          id: uniqueId(),\n          source: 'outcoming',\n          text: inputValue,\n        };\n        if (message.text === '') {\n          return;\n        }\n        socket.send(\n          `'${JSON.stringify({\n            type: 'message',\n            data: { message: inputValue, recieverId: id, recieverName: name },\n          })}'`\n        );\n        chats.addMessage(id, message);\n        setInputValue('');\n      }\n    };\n\n    const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.files !== null) {\n        const file = event.target.files[0];\n        const formData = new FormData();\n        formData.append('0', file);\n        const isFileValid = validateFile(file.type, file.size);\n        if (isFileValid) {\n          try {\n            setUploadStatus('uploading');\n            const response = await axios.post<string>(\n              'http://109.194.37.212:93/api/upload',\n              formData\n            );\n            if (response.status !== 400) {\n              const data = response.data;\n              setFile(file);\n              setLink(data);\n              setUploadStatus('uploaded');\n            }\n          } catch (error) {\n            if (axios.isAxiosError(error)) {\n              setUploadStatus('no-upload');\n              alert(error.response?.data);\n            }\n          }\n        }\n      }\n    };\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <div className=\"send-menu\">\n          <label className=\"send-menu__label\">\n            <img\n              className=\"send-menu__attach-icon\"\n              src={attachIcon}\n              alt=\"attach icon\"\n            />\n            <input\n              className=\"send-menu__file-input\"\n              type=\"file\"\n              onChange={handleUpload}\n            />\n          </label>\n          <input\n            ref={(inputElement) => {\n              if (inputElement) {\n                inputElement.focus();\n              }\n            }}\n            value={inputValue}\n            onChange={handleInput}\n            className=\"send-menu__text-input\"\n            type=\"text\"\n            placeholder=\"Write something...\"\n          />\n          <button type=\"submit\" className=\"send-menu__submit-button\"></button>\n          <img\n            className=\"send-menu__send-icon\"\n            src={sendIcon}\n            alt=\"send icon\"\n          />\n        </div>\n      </form>\n    );\n  }\n);\n","import React from 'react';\nimport './style.scss';\nimport {\n  ChatBodyHeader,\n  ContactHeaderProps,\n} from '../../molecules/ChatBodyHeader';\nimport { Message } from '../../molecules/Message';\nimport { ChatBodySendMenu } from '../../molecules/ChatBodySendMenu';\nimport { Header4 } from '../../atoms/Typography';\nimport chats from '../../../store/chats';\nimport { observer } from 'mobx-react-lite';\n\ninterface ChatBodyProps {\n  socket: WebSocket;\n  currentChatId: string;\n  onClick: ContactHeaderProps['onClick'];\n}\n\nexport const ChatBody: React.FC<ChatBodyProps> = observer(\n  ({ socket, currentChatId, onClick }) => {\n    if (currentChatId === undefined) {\n      return (\n        <div className=\"user-tip\">\n          <Header4>Select a chat to start messaging</Header4>\n        </div>\n      );\n    }\n\n    const activeChat = chats.chats.filter(\n      (chat) => chat.id === currentChatId\n    )[0];\n\n    const messageList = activeChat.messages.map((message) => {\n      return (\n        <li key={message.id}>\n          <Message\n            link={message.link}\n            attached={message.attached}\n            id={message.id}\n            source={message.source}\n            text={message.text}\n            size={message.size}\n            title={message.title}\n          />\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"chat-body\">\n        <div className=\"chat-body__header\">\n          <ChatBodyHeader\n            contactName={activeChat.name}\n            onClick={onClick}\n            gender={activeChat.gender}\n            lastSeen={activeChat.lastSeen}\n          />\n        </div>\n        <div className=\"chat-body__messages\">\n          <ul>{messageList}</ul>\n        </div>\n        <div className=\"chat-body__send-menu\">\n          <ChatBodySendMenu\n            socket={socket}\n            id={activeChat.id}\n            name={activeChat.name}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/profile-icon.73c6e802.svg\";","import React from 'react';\nimport './style.scss';\nimport { Logo } from '../../atoms/Logo';\nimport ProfileIcon from '../../../images/profile-icon.svg';\n\nexport const ChatHeader: React.FC = () => {\n  return (\n    <>\n      <Logo type=\"chat-logo\" />\n      <img className=\"profile-icon\" src={ProfileIcon} alt=\"profile icon\" />\n    </>\n  );\n};\n","import { ContactInfoProps } from '../components/molecules/ContactInfo';\n\nexport const shortenMessage = (message: ContactInfoProps['lastMessage']) => {\n  let result = '';\n  if (message !== undefined) {\n    if (message.length > 25) {\n      result += `${message.slice(0, 23)}...`;\n    } else {\n      return message;\n    }\n\n    return result;\n  }\n\n  return;\n};\n","import React from 'react';\nimport './style.scss';\nimport { UserAvatar } from '../../atoms/UserAvatar';\nimport { Header4, Text2 } from '../../atoms/Typography';\nimport cn from 'classnames';\nimport { shortenMessage } from '../../../utils/shortenMessage';\n\nexport interface ContactInfoProps {\n  title?: string;\n  isActive: boolean;\n  id?: string;\n  gender: string;\n  contactName: string;\n  lastMessage?: string;\n  source?: string;\n  onClick: (currentChatId: string) => void;\n}\n\nexport const ContactInfo: React.FC<ContactInfoProps> = ({\n  title,\n  id,\n  gender,\n  contactName,\n  lastMessage,\n  isActive,\n  source,\n  onClick,\n}) => {\n  const classes = cn('contact-item', {\n    active: isActive,\n  });\n\n  const handleItemClick = () => {\n    if (id) {\n      onClick(id);\n    }\n  };\n\n  return (\n    <div className={classes} onClick={handleItemClick}>\n      <UserAvatar gender={gender} />\n      <div className=\"info\">\n        <Header4>{contactName}</Header4>\n        {source === 'outcoming' ? (\n          <Text2>\n            <span>You: </span>\n            {!lastMessage ? shortenMessage(title) : shortenMessage(lastMessage)}\n          </Text2>\n        ) : (\n          <Text2>\n            {!lastMessage ? shortenMessage(title) : shortenMessage(lastMessage)}\n          </Text2>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './style.scss';\nimport { ContactInfo } from '../../molecules/ContactInfo';\n\nimport chats from '../../../store/chats';\nimport { observer } from 'mobx-react-lite';\n\ninterface ContactsProps {\n  onClick: (currentChatId: string) => void;\n  currentChatId: string;\n}\n\nexport const Contacts: React.FC<ContactsProps> = observer(\n  ({ onClick, currentChatId }) => {\n    const contactItems = chats.chats.map((chat) => {\n      return (\n        <li key={chat.id}>\n          <ContactInfo\n            title={chat.messages[chat.messages.length - 1]?.title}\n            isActive={chat.id === currentChatId}\n            contactName={chat.name}\n            gender={chat.gender}\n            id={chat.id}\n            lastMessage={chat.messages[chat.messages.length - 1]?.text}\n            source={chat.messages[chat.messages.length - 1]?.source}\n            onClick={onClick}\n          />\n        </li>\n      );\n    });\n    return <ul>{contactItems}</ul>;\n  }\n);\n","export default __webpack_public_path__ + \"static/media/alone-user.f7a533b7.svg\";","import React from 'react';\nimport './style.scss';\nimport aloneUser from '../../../images/alone-user.svg';\nimport { Header4 } from '../../atoms/Typography';\n\ninterface NoUsersMessageProps {\n  description: string;\n}\n\nexport const NoUsersMessage: React.FC<NoUsersMessageProps> = ({\n  description,\n}) => {\n  return (\n    <div className=\"no-user-message\">\n      <img className=\"alone-user\" alt=\"alone user icon\" src={aloneUser} />\n      <Header4>{description}</Header4>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/loading-icon.44373d9b.svg\";","import React from 'react';\nimport './style.scss';\nimport loadingIcon from '../../../images/loading-icon.svg';\n\nexport const LoadingIcon: React.FC = () => {\n  return (\n    <div className=\"loading-icon-container\">\n      <img className=\"loading-icon\" src={loadingIcon} alt=\"loading icong\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { ChatTemplate } from '../../templates/ChatTemplate';\nimport { ChatBody } from '../../organisms/ChatBody';\nimport { ChatHeader } from '../../molecules/ChatHeader';\nimport { Contacts } from '../../organisms/Contacts';\nimport { NoUsersMessage } from '../../molecules/NoUsersMessage';\nimport { LoadingIcon } from '../../atoms/LoadingIcon';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport chats from '../../../store/chats';\nimport { observer } from 'mobx-react-lite';\n\nconst websocket = new WebSocket(\n  `ws://109.194.37.212:2346/?type=test&ws_id=${localStorage.getItem('user')}`\n);\n\nexport const ChatPage: React.FC = observer(() => {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n\n  const handleClickChat = (id: string) => {\n    history.push(`/chat/${id}`);\n  };\n\n  const handleClickBackward = () => {\n    history.push('/chat');\n  };\n\n  useEffect(() => {\n    websocket.onopen = () => setIsOpened(true);\n    websocket.onclose = () => setIsOpened(false);\n    websocket.onerror = (error) => console.log(error);\n  }, []);\n\n  useEffect(() => {\n    if (websocket.readyState === 1) {\n      setIsOpened(true);\n      websocket.send(JSON.stringify({ type: 'users_list' }));\n      websocket.onmessage = (msg) => {\n        const list = JSON.parse(msg.data);\n        chats.addChats(list.data);\n      };\n    }\n  }, [isOpened]);\n\n  if (!isOpened) {\n    return (\n      <ChatTemplate\n        header={<ChatHeader />}\n        chatBody={<LoadingIcon />}\n        contactsBar={<LoadingIcon />}\n        isActive={id}\n      />\n    );\n  }\n\n  if (isOpened && chats.chats.length === 0) {\n    return (\n      <ChatTemplate\n        header={<ChatHeader />}\n        contactsBar={\n          <NoUsersMessage description=\"There is no other users yet\" />\n        }\n        isActive={id}\n      />\n    );\n  }\n\n  return (\n    <ChatTemplate\n      contactsBar={<Contacts onClick={handleClickChat} currentChatId={id} />}\n      header={<ChatHeader />}\n      chatBody={\n        <ChatBody\n          socket={websocket}\n          currentChatId={id}\n          onClick={handleClickBackward}\n        />\n      }\n      isActive={id}\n    />\n  );\n});\n","export default __webpack_public_path__ + \"static/media/dropdown-arrow.6d3f84ad.svg\";","import React, { useEffect, useState } from 'react';\nimport './style.scss';\nimport { ErrorIcon } from '../../atoms/ErrorIcon';\nimport { Logo } from '../../atoms/Logo';\nimport { Button } from '../../atoms/Button';\nimport { Header1, Header2 } from '../../atoms/Typography';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport { capitalize } from '../../../utils/capitalize';\nimport dropdownArrow from '../../../images/dropdown-arrow.svg';\nimport refreshCaptchaIcon from '../../../images/refresh-captcha-icon.svg';\nimport cn from 'classnames';\nimport axios from 'axios';\n\ninterface SignInFormInputs {\n  login: string;\n  password: string;\n  password_confirm: string;\n  name: string;\n  gender_id: string;\n  captcha: string;\n}\n\ninterface Gender {\n  id: string;\n  gender: string;\n}\n\ninterface ResponseGender {\n  genders: Gender[];\n}\n\nexport const SignInForm: React.FC = () => {\n  const [isDropped, setIsDropped] = useState<boolean>(false);\n  const [genderList, setGenderList] = useState<Gender[]>([]);\n  const [selectValue, setSelectValue] = useState<string>('');\n  const [selectText, setSelectText] = useState<string>('');\n  const [dateNow, setDateNow] = useState<number>(Date.now);\n\n  useEffect(() => {\n    axios\n      .get<ResponseGender>('http://109.194.37.212:93/api/auth')\n      .then((response) => setGenderList(response.data.genders));\n  }, []);\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm<SignInFormInputs>();\n\n  const loginInputclasses = cn('input', {\n    invalid: errors.login,\n  });\n\n  const passwordInputclasses = cn('input', {\n    invalid: errors.password,\n  });\n\n  const confirmInputclasses = cn('input', {\n    invalid: errors.password_confirm,\n  });\n\n  const nameInputclasses = cn('input', {\n    invalid: errors.name,\n  });\n\n  const selectPlaceholderClasses = cn('placeholder-container', {\n    invalid: selectText === 'Your gender',\n  });\n\n  const firstOptionClasses = cn('option first-option', {\n    dropped: isDropped,\n  });\n\n  const secondOptionClasses = cn('option second-option', {\n    dropped: isDropped,\n  });\n\n  const captchaInputclasses = cn('captcha-input', {\n    invalid: errors.captcha,\n  });\n\n  const handleDropdown = (event: React.MouseEvent<HTMLDivElement>) => {\n    const target = event.target as Element;\n    const value = target.getAttribute('data-value');\n    setSelectText(value as string);\n    if (value === 'male' || value === 'female') {\n      const currentGender = genderList.filter((item) => item.gender === value);\n      setSelectValue(currentGender[0].id);\n    }\n\n    setIsDropped(!isDropped);\n  };\n\n  const history = useHistory();\n  const onSubmit: SubmitHandler<SignInFormInputs> = async (data) => {\n    const formData = new FormData();\n    formData.append('login', data.login);\n    formData.append('password', data.password);\n    formData.append('password_confirm', data.password_confirm);\n    formData.append('name', data.name);\n    formData.append('gender_id', selectValue);\n    formData.append('captcha', data.captcha);\n    try {\n      const response = await axios({\n        method: 'post',\n        url: 'http://109.194.37.212:93/api/auth/register',\n        data: formData,\n      });\n\n      const data: boolean | string = response.data;\n\n      if (data === true) {\n        history.push('/login');\n      }\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        alert(error.response?.data);\n      }\n    }\n  };\n\n  const src = `http://109.194.37.212:93/api/auth/captcha?t=${dateNow}`;\n  const handleCaptchaRefresh = () => {\n    setDateNow(Date.now());\n  };\n\n  return (\n    <div className=\"sign-form-container\">\n      <Logo type=\"login-logo\" />\n      <Header1>\n        Sign Up to <span className=\"header-blue\">Chatty</span>\n        <span className=\"header-grey\">!</span>\n      </Header1>\n      <Header2>Registration</Header2>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-field\">\n          <label>\n            <span className=\"form-field__label\">Create user name</span>\n            <div className=\"form-field__input\">\n              <input\n                {...register('login', { required: true, maxLength: 50 })}\n                className={loginInputclasses}\n                placeholder=\"Input user name\"\n              />\n              {errors.login ? <ErrorIcon /> : null}\n            </div>\n          </label>\n          <span className=\"form-field__error\">\n            {errors.login && 'Login is required'}\n          </span>\n        </div>\n\n        <div className=\"form-field\">\n          <label>\n            <span className=\"form-field__label\">Create password</span>\n            <div className=\"form-field__input\">\n              <input\n                {...register('password', { required: true })}\n                className={passwordInputclasses}\n                placeholder=\"Create password\"\n                type=\"password\"\n              />\n              {errors.password ? <ErrorIcon /> : null}\n            </div>\n          </label>\n          <span className=\"form-field__error\">\n            {errors.password && 'Password is required'}\n          </span>\n        </div>\n\n        <div className=\"form-field\">\n          <label>\n            <span className=\"form-field__label\">Password confirmation</span>\n            <div className=\"form-field__input\">\n              <input\n                {...register('password_confirm', { required: true })}\n                className={confirmInputclasses}\n                placeholder=\"Password confirmation\"\n                type=\"password\"\n              />\n              {errors.password_confirm ? <ErrorIcon /> : null}\n            </div>\n          </label>\n          <span className=\"form-field__error\">\n            {errors.password_confirm && 'Passwords do not match'}\n          </span>\n        </div>\n\n        <div className=\"form-field\">\n          <label>\n            <span className=\"form-field__label\">Nickname</span>\n            <div className=\"form-field__input\">\n              <input\n                {...register('name', { required: true, maxLength: 50 })}\n                className={nameInputclasses}\n                placeholder=\"Nickname\"\n              />\n              {errors.name ? <ErrorIcon /> : null}\n            </div>\n          </label>\n          <span className=\"form-field__error\">\n            {errors.name && 'Name is required'}\n          </span>\n        </div>\n\n        <div className=\"form-field\">\n          <label>\n            <span className=\"form-field__label\">Your gender</span>\n            <div className=\"select-container\">\n              <div\n                className={selectPlaceholderClasses}\n                onClick={handleDropdown}\n                data-value=\"Your gender\">\n                {selectValue === '' ? (\n                  <div className=\"placeholder\" data-value=\"Your gender\">\n                    Your gender\n                  </div>\n                ) : (\n                  <div className=\"placeholder set\" data-value=\"Your gender\">\n                    {capitalize(selectText)}\n                  </div>\n                )}\n                <img\n                  className=\"dropdown-arrow\"\n                  src={dropdownArrow}\n                  alt=\"dropdown arrow\"\n                  data-value=\"Your gender\"\n                />\n              </div>\n              <div\n                className={firstOptionClasses}\n                data-value=\"male\"\n                onClick={handleDropdown}>\n                Male\n              </div>\n              <div\n                className={secondOptionClasses}\n                data-value=\"female\"\n                onClick={handleDropdown}>\n                Female\n              </div>\n            </div>\n          </label>\n          <span className=\"form-field__error\">\n            {selectText === 'Your gender' ? 'Choose your gender' : ''}\n          </span>\n        </div>\n\n        <div className=\"form-field\">\n          <div className=\"form-field__captcha\">\n            <div className=\"input-container\">\n              <label>\n                <span className=\"form-field__label\">Security code</span>\n                <div className=\"form-field__input\">\n                  <input\n                    {...register('captcha', { required: true })}\n                    className={captchaInputclasses}\n                    placeholder=\"Security code\"\n                  />\n                  {errors.captcha ? <ErrorIcon /> : null}\n                </div>\n              </label>\n              <span className=\"form-field__error\">\n                {errors.captcha && 'Captcha is wrong'}\n              </span>\n            </div>\n            <div className=\"captcha-container\">\n              <img src={src} alt=\"captcha\" />\n            </div>\n            <img\n              className=\"refresh-icon\"\n              src={refreshCaptchaIcon}\n              alt=\"refresh captcha icon\"\n              onClick={handleCaptchaRefresh}\n            />\n          </div>\n        </div>\n\n        <Button type=\"submit\">Register</Button>\n        <Button type=\"button\" direction=\"login\">\n          Log in\n        </Button>\n      </form>\n    </div>\n  );\n};\n","export const capitalize = (string: string) => {\n  return string[0].toUpperCase() + string.slice(1);\n};\n","import React from 'react';\nimport './style.scss';\nimport { AuthorizationTemplate } from '../../templates/AuthorizationTemplate';\nimport { SignInForm } from '../../organisms/SignInForm';\n\nexport const SignInPage: React.FC = () => {\n  // return <SignInTemplate left={<SignInForm />} />;\n  return <AuthorizationTemplate left={<SignInForm />} />;\n};\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { SCREENS } from './endpoints';\nimport { LoginPage } from '../components/pages/LoginPage';\nimport { ChatPage } from '../components/pages/ChatPage';\nimport { SignInPage } from '../components/pages/SignInPage';\nimport { authContext } from '../contexts';\nimport { useAuth } from '../hooks';\nimport { useState } from 'react';\nimport { isEmpty } from 'lodash';\n\ninterface RouteProps {\n  children: React.ReactNode | React.ReactNode[];\n  path?: SCREENS.SCREEN_EMPTY_CHAT | SCREENS.SCREEN_CHAT;\n  exact?: true;\n}\n\nconst AuthProvider: React.FC<RouteProps> = ({ children }) => {\n  const currentUser = localStorage.getItem('user');\n  const initialState = currentUser ? { username: currentUser } : null;\n  const [user, setUser] = useState(initialState);\n\n  const logIn = (userData: string) => {\n    localStorage.setItem('user', userData);\n    setUser({ username: userData });\n  };\n\n  const isAuth = () => !isEmpty(user);\n\n  const authValue = {\n    user,\n    logIn,\n    isAuth,\n  };\n\n  return (\n    <authContext.Provider value={authValue}>{children}</authContext.Provider>\n  );\n};\n\nconst PrivateRoute: React.FC<RouteProps> = ({ children, ...props }) => {\n  const auth = useAuth();\n\n  const routeRender = () => {\n    if (auth.isAuth()) {\n      return children;\n    }\n\n    return <Redirect to={SCREENS.SCREEN_LOGIN} />;\n  };\n\n  return <Route {...props} render={routeRender} />;\n};\n\nexport const Routes: React.FC = () => {\n  return (\n    <AuthProvider>\n      <Switch>\n        <Route path={SCREENS.SCREEN_LOGIN} exact>\n          <LoginPage />\n        </Route>\n        <Route path={SCREENS.SCREEN_SIGN} exact>\n          <SignInPage />\n        </Route>\n        <PrivateRoute path={SCREENS.SCREEN_EMPTY_CHAT} exact>\n          <ChatPage />\n        </PrivateRoute>\n        <PrivateRoute path={SCREENS.SCREEN_CHAT} exact>\n          <ChatPage />\n        </PrivateRoute>\n        <Redirect to={SCREENS.SCREEN_EMPTY_CHAT} />\n      </Switch>\n    </AuthProvider>\n  );\n};\n","import React from 'react';\n// import { LoginPage } from './components/pages/LoginPage';\n// import { ChatPage } from './components/pages/ChatPage';\nimport { Routes } from './routes';\nimport './style.scss';\n\nfunction App() {\n  return <Routes />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}